# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: adguard-home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  driftDetection:
    mode: enabled
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph
  values:
    controllers:
      adguard-home:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 2
        containers:
          app:
            image:
              repository: adguard/adguardhome
              tag: v0.107.50@sha256:f890b77505e410e295cc96830632b46075d7263cef52c158f9331348c98e1228
              pullPolicy: IfNotPresent
            env:
              TZ: America/New_York
            probes:
              liveness: &probes
                enabled: true
                type: HTTP
                port: &adguardPort 3000
                path: /login.html
              readiness: *probes
              startup:
                <<: *probes
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: true
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 1Gi
        pod:
          priorityClassName: system-cluster-critical
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                podAffinityTerm:
                  topologyKey: kubernetes.io/hostname
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: adguard-home
                      app.kubernetes.io/component: adguard-home
        statefulset:
          volumeClaimTemplates:
          - name: data
            storageClass: ceph-block
            accessMode: ReadWriteOnce
            size: 2Gi
            globalMounts:
            - path: /opt/adguardhome/conf
              subPath: conf
            - path: /opt/adguardhome/work
              subPath: work
      sync:
        containers:
          app:
            image:
              repository: ghcr.io/bakito/adguardhome-sync
              tag: alpine-v0.6.11@sha256:aa6e74003e9c7a1719967f3d80955fb7b89ca659a4dd8fae9ec8901103f018d9
              pullPolicy: IfNotPresent
            args: [run]
            envFrom:
            - secretRef:
                name: adguard-home
            env:
              ORIGIN_URL: http://adguard-home-origin:3000
              ORIGIN_WEB_URL: https://adguard.${SECRET_DOMAIN}
              REPLICA_URL: http://adguard-home-replica:3000
              REPLICA_WEB_URL: https://adguard-replica.${SECRET_DOMAIN}
              REPLICA_AUTO_SETUP: "true"
              CRON: "*/10 * * * *"
            securityContext:
              readOnlyRootFilesystem: true
        pod:
          labels:
          securityContext:
            runAsNonRoot: true
    defaultPodOptions:
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 568
    #     runAsGroup: 568
    #     fsGroup: 568
    #     fsGroupChangePolicy: OnRootMismatch
    #     seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: adguard-home
        ports:
          http:
            port: *adguardPort
      sync:
        controller: sync
        ports:
          http:
            port: &syncPort 8080
      origin: &origin-http
        controller: adguard-home
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "0"
        ports:
          http:
            port: *adguardPort
      origin-dns: &origin-dns
        controller: adguard-home
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "0"
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.100.0.100
        externalTrafficPolicy: Local
        ports:
          tcp:
            port: 53
            protocol: TCP
          udp:
            port: 53
            protocol: UDP
      replica:
        <<: *origin-http
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "1"
      replica-dns:
        <<: *origin-dns
        extraSelectorLabels:
          apps.kubernetes.io/pod-index: "1"
        annotations:
          io.cilium/lb-ipam-ips: 10.100.0.101
    ingress:
      origin: &ingress
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        className: internal
        hosts:
        - host: "adguard.${SECRET_DOMAIN}"
          paths:
          - path: /
            service:
              identifier: origin
              port: http
      replica:
        <<: *ingress
        hosts:
        - host: adguard-replica.${SECRET_DOMAIN}
          paths:
          - path: /
            service:
              identifier: replica
              port: http
